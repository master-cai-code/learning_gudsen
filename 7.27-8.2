## 7.27
### 1. frp (fast reverse proxy 快速反向代理)  内网穿透
      作用：外网通过frp来访问内网
      更加深入,有待理解?? 有学习必要??
### 2. ssh (security shell) 安全的外壳??  不同与https，ssh是没有CA证书认证的，只有远程主机在自己网站上公示自己的公钥指纹，用户自行核对...
      作用：远程登录更加安全(远程意味着用户名密码会通过网络传输)   一旦有网络传输就有中途被黑客“截获”的可能
      不安全问题的解决：利用公钥私钥加密解密传输
      新的问题：发送者用服务器的公钥加密，但是公钥怎么分配给发送者  (因为会存在这样一种情况： 服务器发送公钥给用户的时候，黑客拦截住公钥，把自己的公钥冒充服务器公钥，再发送给用户)
      上述的解决：认证中心颁发数字证书给服务器，里面包含服务器的公钥，服务器再直接发送数字证书就能证明自己是自己了
      新的问题：那客户怎么证明客户是客户呢??                     (因为会存在这样一种情况：客户向服务端发送数据的时候，黑客拦截信息，此时信息是用服务器的公钥加密的，
                                黑客无客户端私钥无法查看，但是黑客也能拿到服务器的公钥，黑客可以自己伪造消息，假装是刚才的用户发送给服务器的）
     所有的问题就是两个：黑客可以冒充服务器，也可以冒充客户端，如何证明服务器是服务器，客户端是客户端就是关键问题
           客户端发送给服务器的消息被黑客拦截后，没有得到真实服务器的响应，即使黑客假装服务器返回一个虚假结果，但客户端用服务器公钥解密，会失败（此时是私钥加密，对应公钥解密）
           非对称加密，双方进行通信时会互相发送公钥给对方?? 服务器会给每个客户一个公钥，每个客户也会给服务器自己的公钥?? 那服务器的公钥岂不是特别多???
           还是一知半解啊????
           
## 7.28
### 1.serialVersionUid 的作用是起版本标识，如果自己不显示的指定值的话，序列化和反序列化的时候jvm会根据类名、属性、方法等自己计算一个Uid，只有序列化前和序列化后的Uid都相等才能成功反序列化

